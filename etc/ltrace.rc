; +		== May vary (ie, is a returned value)
; int
; addr		== (void *)		[int, written in hexa]
; file		== (FILE *)
; format	== ((char *), ...)	[printf() like]
; octal		== int			[written in octal]
; string	== (char *)

int atexit(addr);
int close(int);
int exit(int);
int fclose(file);
int fprintf(file,format);
int free(addr);
int gethostname(+string,int);
int getopt_long(int,addr,string,addr,addr);
addr malloc(int);
addr memset(addr,char,int);
int mkdir(string,octal);
int open(string,int,octal);			<- OJO
int printf(format);
string rindex(string,char);
int strcmp(string,string);
int strncmp(string,string,int);
int time(addr);

; #define	_T_UNKNOWN	-1
; #define	_T_VOID		0
; #define	_T_INT		1
; #define	_T_UINT		2
; #define	_T_OCTAL	3
; #define	_T_CHAR		4
; #define	_T_STRING	5
; #define	_T_ADDR		6
; #define	_T_FILE		7
; #define	_T_HEX		8
; #define	_T_FORMAT	9		/* printf-like format */
