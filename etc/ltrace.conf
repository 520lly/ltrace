; ltrace.conf

; Argument types:
; +		== May vary (ie, is a returned value) (prefix)
; void
; int
; uint		== (unsigned int)
; octal		== (unsigned)			[written in octal]
; char
; addr		== (void *)			[unsigned, written in hexa]
; file		== (FILE *)						[TODO]
; format	== ((const char *), ...)	[printf() like]		[TODO]
; string	== (char *)
; stringN	== (char *)		[N>=0]	[show only up to (arg N) bytes]

; arpa/inet.h
int inet_aton(string,addr);
string inet_ntoa(addr);			; It isn't a ADDR but an hexa number...
addr inet_addr(string);

; bfd.h
void bfd_init(void);
int bfd_set_default_target(string);
addr bfd_scan_vma(string, addr, int);
addr bfd_openr(string,string);
int bfd_check_format(addr,int);

; ctype.h
char tolower(char);
char toupper(char);

; curses.h
int waddch(addr, char);
int mvprintw(int, int, format);
int wmove(addr, int, int);
int waddnstr(addr, string, int);
string tgoto(string, int, int);

; dirent.h
int closedir(addr);
addr opendir(string);
addr readdir(addr);

; dlfcn.h
addr  dlopen(string, int);
string dlerror(void);
addr  dlsym(addr, string);
int dlclose(addr);

; errno.h
addr __errno_location(void);

; fcntl.h
int open(string,int,octal);		; WARNING: 3rd argument may not be there

; getopt.h
int getopt_long(int,addr,string,addr,addr);
int getopt_long_only(int,addr,string,addr,addr);

; grp.h
void endgrent(void);
addr getgrnam(string);

; libintl.h
string __dcgettext(string,string,int);
string bindtextdomain(string, string);
string textdomain(string);

; libio.h
char _IO_getc(file);
int _IO_putc(char,file);

; locale.h
string setlocale(int, string);

; mntent.h
int endmntent(file);
file setmntent(string,string);
addr getmntent(addr);

; netdb.h
addr gethostbyname(string);
addr getprotobyname(string);

; netinet/in.h
uint ntohs(uint);

; pcap.h
string pcap_lookupdev(addr);
addr pcap_open_live(string, int, int, int, addr);
int pcap_snapshot(addr);
int pcap_lookupnet(string, addr, addr, addr);
int pcap_compile(addr, addr, string, int, addr);

; pwd.h
string getpass(string);
void endpwent(void);
addr getpwnam(string);
void setpwent(void);

; readline/readline.h
string readline(string);

; signal.h
int kill(int,int);
addr signal(int,addr);

; stdio.h
int fclose(file);
int feof(file);
int ferror(file);
int fflush(file);
char fgetc(file);
addr fgets(+string, uint, file);
int fileno(file);
file fopen(string,string);
int fprintf(file,format);
int fputc(char,file);
int fputs(string,file);
uint fread(addr,uint,uint,file);
uint fwrite(string,uint,uint,file);
int pclose(addr);
void perror(string);
addr popen(string, string);
int printf(format);
int puts(string);
int remove(string);
int snprintf(+string2,int,format);
int sprintf(+string,format);
string tempnam(string,string);
int vfprintf(file,string,addr);
int vsnprintf(+string2,int,string,addr);

; stdlib.h
int __strtol_internal(string,addr,int);
int atexit(addr);
addr calloc(uint, uint);
void exit(int);
void free(addr);
string getenv(string);
addr malloc(int);
void qsort(addr,uint,uint,addr);
int random(void);
addr realloc(addr,uint);
void srandom(uint);
int system(string);

; string.h
void bcopy(addr,addr,int);
void bzero(addr,int);
string basename(string);
string index(string,char);
addr memchr(string,char,uint);
addr memcpy(addr,string3,uint);
addr memset(addr,char,int);
string rindex(string,char);
addr stpcpy(addr,string);
int strcasecmp(string, string);
string strcat(string, string);
string strchr(string,char);
int strcoll(string,string);
int strlen(string);
int strcmp(string,string);
addr strcpy(addr,string);
addr strdup(string);
string strerror(int);
int strncmp(string,string,int);
addr strncpy(addr,string3,uint);
string strrchr(string,char);
string strsep(addr,string);
uint strspn(string,string);
uint strcspn(string,string);
string strstr(string,string);

; sys/ioctl.h
int ioctl(int, int, addr);

; sys/socket.h
int socket(int,int,int);

; sys/stat.h
int __fxstat(int,int,addr);
int __xstat(int,string,addr);
int chmod(string,octal);
int fchmod(int,octal);
int mkfifo(string,octal);
octal umask(octal);

; sys/utsname.h
int uname(addr);

; sys/vfs.h
int statfs(string,addr);

; syslog.h
void closelog(void);
void openlog(string,int,int);
void syslog(int,format);

; term.h
int tputs(string, int, addr);

; termios.h
int tcgetattr(int,addr);
int tcsetattr(int,int,addr);

; time.h
string ctime(addr);
int gettimeofday(addr, addr);
addr gmtime(addr);
addr localtime(addr);
uint strftime(+string2,uint,string,addr);
int time(addr);

; unistd.h
void _exit(int);
int access(string, int);
uint alarm(uint);
int chdir(string);
int chown(string,int,int);
int close(int);
string crypt(string,string);
int dup2(int,int);
int execlp(string,string,addr,addr,addr);
int execv(string,addr);
int fchdir(int);
int fork(void);
int ftruncate(int,uint);
string2 getcwd(addr,uint);
int getdomainname(+string2,int);
int geteuid(void);
int getegid(void);
int getgid(void);
int gethostname(+string2,int);
string getlogin(void);
int getopt(int,addr,string);
int getpid(void);
int getuid(void);
int isatty(int);
int link(string,string);
int mkdir(string,octal);
int read(int, +string0, uint);
int rmdir(string);
int setgid(int);
int sethostname(+string2,int);
int setpgid(int,int);
int setuid(int);
uint sleep(uint);
int symlink(string,string);
int sync(void);
int truncate(string,uint);
string ttyname(int);
int unlink(string);
void usleep(uint);
int write(int, string3, uint);

; utmp.h
void endutent(void);
addr getutent(void);
void setutent(void);

; X11/Xlib.h
void XCloseDisplay(addr);
int XMapWindow(addr,addr);
addr XOpenDisplay(string);

; SYSCALLS
addr  SYS_brk(addr);
int   SYS_close(int);
int   SYS_execve(string,addr,addr);
void  SYS_exit(int);
int   SYS_fork(void);
int   SYS_getcwd(+string2,uint);
int   SYS_getpid(void);
;addr SYS_mmap(addr,int,int,int,int,int);
int   SYS_munmap(addr,uint);
int   SYS_open(string,int,octal);
int   SYS_personality(uint);
int   SYS_read(int,+string0,uint);
int   SYS_stat(string,addr);
octal SYS_umask(octal);
int   SYS_uname(addr);
int   SYS_write(int,string3,uint);
int   SYS_sync(void);
