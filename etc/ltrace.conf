; ltrace.conf

; Argument types:
; +		== May vary (ie, is a returned value) (prefix)
; void
; int
; uint		== (unsigned int)
; octal		== (unsigned)			[written in octal]
; char
; addr		== (void *)			[unsigned, written in hexa]
; file		== (FILE *)						[TODO]
; format	== ((const char *), ...)	[printf() like]		[TODO]
; string	== (char *)
; stringN	== (char *)		[N>=0]	[show only up to (arg N) bytes]

; errno.h
addr __errno_location(void);

; fcntl.h
int open(string,int,octal);		; WARNING: 3rd argument may not be there

; getopt.h
int getopt_long(int,addr,string,addr,addr);

; libintl.h
string bindtextdomain(string, string);
string textdomain(string);

; libio.h
int _IO_putc(char,file);

; locale.h
string setlocale(int, string);

; stdio.h
int fclose(file);
addr fgets(+string, uint, file);
int fprintf(file,format);
int fputs(string,file);
int printf(format);

; unistd.h
int close(int);
int fork(void);
int geteuid(void);
int gethostname(+string2,int);
int mkdir(string,octal);
int read(int, +string0, uint);
int sethostname(+string2,int);
uint sleep(uint);
int sync(void);
int write(int, string3, uint);

; stdlib.h
int atexit(addr);
void exit(int);
void free(addr);
addr malloc(int);

; string.h
addr memset(addr,char,int);
string rindex(string,char);
int strcmp(string,string);
addr strcpy(addr,string);
addr strdup(string);
int strncmp(string,string,int);
addr strncpy(addr,string3,uint);
string strrchr(string,char);
string strstr(string,string);

; time.h
int time(addr);

; SYSCALLS
addr SYS_brk(addr);
int  SYS_close(int);
int  SYS_execve(string,addr,addr);
void SYS_exit(int);
int  SYS_fork(void);
int  SYS_getpid(void);
;addr SYS_mmap(addr,int,int,int,int,int);
int  SYS_munmap(addr,uint);
int  SYS_open(string,int,octal);
int  SYS_personality(uint);
int  SYS_read(int,+string0,uint);
int  SYS_write(int,string3,uint);
int  SYS_sync(void);
